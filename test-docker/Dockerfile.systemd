FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

# Installer systemd et les outils de base
RUN apt-get update && apt-get install -y \
    systemd \
    systemd-sysv \
    curl \
    wget \
    vim \
    git \
    sudo \
    iptables \
    iproute2 \
    && rm -rf /var/lib/apt/lists/*

# Nettoyer les unités systemd inutiles pour Docker
RUN cd /lib/systemd/system/sysinit.target.wants/ && \
    ls | grep -v systemd-tmpfiles-setup | xargs rm -f $1 && \
    rm -f /lib/systemd/system/multi-user.target.wants/* \
    /etc/systemd/system/*.wants/* \
    /lib/systemd/system/local-fs.target.wants/* \
    /lib/systemd/system/sockets.target.wants/*udev* \
    /lib/systemd/system/sockets.target.wants/*initctl* \
    /lib/systemd/system/basic.target.wants/* \
    /lib/systemd/system/anaconda.target.wants/* \
    /lib/systemd/system/plymouth* \
    /lib/systemd/system/systemd-update-utmp*

# Copier les scripts de test
WORKDIR /root
COPY setup.sh foreground.sh verify-step1.sh ./
RUN chmod +x *.sh

# Créer un script d'entrée pour lancer le test après systemd
RUN echo '#!/bin/bash\n\
# Attendre que systemd soit prêt\n\
while ! systemctl is-system-running --wait 2>/dev/null; do\n\
    echo "Attente de systemd..."\n\
    sleep 1\n\
done\n\
\n\
echo "=== systemd est prêt ==="\n\
echo ""\n\
\n\
# Lancer le test\n\
cd /root\n\
./setup.sh > /tmp/setup-output.log 2>&1 &\n\
SETUP_PID=$!\n\
\n\
./foreground.sh\n\
\n\
wait $SETUP_PID\n\
EXIT_CODE=$?\n\
\n\
if [ $EXIT_CODE -eq 0 ]; then\n\
    export PATH=$PATH:/snap/bin\n\
    echo ""\n\
    echo "=== Test microk8s ==="\n\
    microk8s version 2>&1 | head -3\n\
    echo ""\n\
    microk8s status\n\
else\n\
    echo ""\n\
    echo "=== Erreur - Logs ==="\n\
    tail -50 /tmp/setup.log\n\
fi\n\
' > /root/run-test.sh && chmod +x /root/run-test.sh

# Exposer systemd comme processus init
STOPSIGNAL SIGRTMIN+3
CMD ["/sbin/init"]
